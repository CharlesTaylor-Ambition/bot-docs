<Type Name="MockSettingsMiddleware" FullName="Microsoft.Bot.Builder.Dialogs.Adaptive.Testing.PropertyMocks.MockSettingsMiddleware">
  <TypeSignature Language="C#" Value="public class MockSettingsMiddleware : Microsoft.Bot.Builder.IMiddleware" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockSettingsMiddleware extends System.Object implements class Microsoft.Bot.Builder.IMiddleware" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.Dialogs.Adaptive.Testing.PropertyMocks.MockSettingsMiddleware" />
  <TypeSignature Language="VB.NET" Value="Public Class MockSettingsMiddleware&#xA;Implements IMiddleware" />
  <TypeSignature Language="F#" Value="type MockSettingsMiddleware = class&#xA;    interface IMiddleware" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder.Dialogs.Adaptive.Testing</AssemblyName>
    <AssemblyVersion>4.10.0.0</AssemblyVersion>
    <AssemblyVersion>4.10.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Bot.Builder.IMiddleware</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Middleware which injests mocked settings properties.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MockSettingsMiddleware (System.Collections.Generic.List&lt;Microsoft.Bot.Builder.Dialogs.Adaptive.Testing.PropertyMocks.PropertyMock&gt; properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.List`1&lt;class Microsoft.Bot.Builder.Dialogs.Adaptive.Testing.PropertyMocks.PropertyMock&gt; properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Adaptive.Testing.PropertyMocks.MockSettingsMiddleware.#ctor(System.Collections.Generic.List{Microsoft.Bot.Builder.Dialogs.Adaptive.Testing.PropertyMocks.PropertyMock})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (properties As List(Of PropertyMock))" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Builder.Dialogs.Adaptive.Testing.PropertyMocks.MockSettingsMiddleware : System.Collections.Generic.List&lt;Microsoft.Bot.Builder.Dialogs.Adaptive.Testing.PropertyMocks.PropertyMock&gt; -&gt; Microsoft.Bot.Builder.Dialogs.Adaptive.Testing.PropertyMocks.MockSettingsMiddleware" Usage="new Microsoft.Bot.Builder.Dialogs.Adaptive.Testing.PropertyMocks.MockSettingsMiddleware properties" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Dialogs.Adaptive.Testing</AssemblyName>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.Generic.List&lt;Microsoft.Bot.Builder.Dialogs.Adaptive.Testing.PropertyMocks.PropertyMock&gt;" />
      </Parameters>
      <Docs>
        <param name="properties">properties to mock.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Adaptive.Testing.PropertyMocks.MockSettingsMiddleware" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTurnAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task OnTurnAsync (Microsoft.Bot.Builder.ITurnContext turnContext, Microsoft.Bot.Builder.NextDelegate next, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OnTurnAsync(class Microsoft.Bot.Builder.ITurnContext turnContext, class Microsoft.Bot.Builder.NextDelegate next, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Adaptive.Testing.PropertyMocks.MockSettingsMiddleware.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Builder.NextDelegate,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function OnTurnAsync (turnContext As ITurnContext, next As NextDelegate, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnTurnAsync : Microsoft.Bot.Builder.ITurnContext * Microsoft.Bot.Builder.NextDelegate * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnTurnAsync : Microsoft.Bot.Builder.ITurnContext * Microsoft.Bot.Builder.NextDelegate * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="mockSettingsMiddleware.OnTurnAsync (turnContext, next, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.IMiddleware.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Builder.NextDelegate,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Dialogs.Adaptive.Testing</AssemblyName>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="next" Type="Microsoft.Bot.Builder.NextDelegate" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">To be added.</param>
        <param name="next">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
