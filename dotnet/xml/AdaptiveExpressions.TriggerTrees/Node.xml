<Type Name="Node" FullName="AdaptiveExpressions.TriggerTrees.Node">
  <TypeSignature Language="C#" Value="public class Node" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Node extends System.Object" />
  <TypeSignature Language="DocId" Value="T:AdaptiveExpressions.TriggerTrees.Node" />
  <TypeSignature Language="VB.NET" Value="Public Class Node" />
  <TypeSignature Language="F#" Value="type Node = class" />
  <AssemblyInfo>
    <AssemblyName>AdaptiveExpressions</AssemblyName>
    <AssemblyVersion>4.9.3.0</AssemblyVersion>
    <AssemblyVersion>4.10.0.0</AssemblyVersion>
    <AssemblyVersion>4.10.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Node in a trigger tree.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AllTriggers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;AdaptiveExpressions.TriggerTrees.Trigger&gt; AllTriggers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class AdaptiveExpressions.TriggerTrees.Trigger&gt; AllTriggers" />
      <MemberSignature Language="DocId" Value="P:AdaptiveExpressions.TriggerTrees.Node.AllTriggers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllTriggers As IReadOnlyList(Of Trigger)" />
      <MemberSignature Language="F#" Value="member this.AllTriggers : System.Collections.Generic.IReadOnlyList&lt;AdaptiveExpressions.TriggerTrees.Trigger&gt;" Usage="AdaptiveExpressions.TriggerTrees.Node.AllTriggers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;AdaptiveExpressions.TriggerTrees.Trigger&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets all triggers that contain the <see cref="P:AdaptiveExpressions.TriggerTrees.Node.Clause" /> in this node. 
            </summary>
        <value>
            All triggers that contain the <see cref="P:AdaptiveExpressions.TriggerTrees.Node.Clause" /> in this node. 
            </value>
        <remarks>
            Triggers only contain the most specific trigger, so if this node 
            is Pred(A) and there was a rule R1: Pred(A) -&gt; A1 and R2: Pred(A) v Pred(B) -&gt; A2
            then the second trigger would be in AllTriggers, but not Triggers because it 
            is more general.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clause">
      <MemberSignature Language="C#" Value="public AdaptiveExpressions.TriggerTrees.Clause Clause { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AdaptiveExpressions.TriggerTrees.Clause Clause" />
      <MemberSignature Language="DocId" Value="P:AdaptiveExpressions.TriggerTrees.Node.Clause" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Clause As Clause" />
      <MemberSignature Language="F#" Value="member this.Clause : AdaptiveExpressions.TriggerTrees.Clause" Usage="AdaptiveExpressions.TriggerTrees.Node.Clause" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AdaptiveExpressions.TriggerTrees.Clause</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the logical conjunction this node represents.
            </summary>
        <value>
            The logical conjunction this node represents.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Relationship">
      <MemberSignature Language="C#" Value="public AdaptiveExpressions.TriggerTrees.RelationshipType Relationship (AdaptiveExpressions.TriggerTrees.Node other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype AdaptiveExpressions.TriggerTrees.RelationshipType Relationship(class AdaptiveExpressions.TriggerTrees.Node other) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.TriggerTrees.Node.Relationship(AdaptiveExpressions.TriggerTrees.Node)" />
      <MemberSignature Language="VB.NET" Value="Public Function Relationship (other As Node) As RelationshipType" />
      <MemberSignature Language="F#" Value="member this.Relationship : AdaptiveExpressions.TriggerTrees.Node -&gt; AdaptiveExpressions.TriggerTrees.RelationshipType" Usage="node.Relationship other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AdaptiveExpressions.TriggerTrees.RelationshipType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="AdaptiveExpressions.TriggerTrees.Node" />
      </Parameters>
      <Docs>
        <param name="other">Node to compare against.</param>
        <summary>
            Identify the relationship between two nodes.
            </summary>
        <returns>Relationship between this node and the other.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Specializations">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;AdaptiveExpressions.TriggerTrees.Node&gt; Specializations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class AdaptiveExpressions.TriggerTrees.Node&gt; Specializations" />
      <MemberSignature Language="DocId" Value="P:AdaptiveExpressions.TriggerTrees.Node.Specializations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Specializations As IReadOnlyList(Of Node)" />
      <MemberSignature Language="F#" Value="member this.Specializations : System.Collections.Generic.IReadOnlyList&lt;AdaptiveExpressions.TriggerTrees.Node&gt;" Usage="AdaptiveExpressions.TriggerTrees.Node.Specializations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;AdaptiveExpressions.TriggerTrees.Node&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets specialized children of this node.
            </summary>
        <value>
            Specialized children of this node.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.TriggerTrees.Node.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="node.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns a string that represents the current object.
            </summary>
        <returns>A string value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public void ToString (System.Text.StringBuilder builder, int indent = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ToString(class System.Text.StringBuilder builder, int32 indent) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.TriggerTrees.Node.ToString(System.Text.StringBuilder,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ToString (builder As StringBuilder, Optional indent As Integer = 0)" />
      <MemberSignature Language="F#" Value="override this.ToString : System.Text.StringBuilder * int -&gt; unit" Usage="node.ToString (builder, indent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Text.StringBuilder" />
        <Parameter Name="indent" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="builder">A StringBuilder object.</param>
        <param name="indent">An integer representing the number of spaces at the start of a line.</param>
        <summary>
            Returns a string that represents the current object.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tree">
      <MemberSignature Language="C#" Value="public AdaptiveExpressions.TriggerTrees.TriggerTree Tree { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AdaptiveExpressions.TriggerTrees.TriggerTree Tree" />
      <MemberSignature Language="DocId" Value="P:AdaptiveExpressions.TriggerTrees.Node.Tree" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tree As TriggerTree" />
      <MemberSignature Language="F#" Value="member this.Tree : AdaptiveExpressions.TriggerTrees.TriggerTree" Usage="AdaptiveExpressions.TriggerTrees.Node.Tree" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AdaptiveExpressions.TriggerTrees.TriggerTree</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the tree this node is found in.
            </summary>
        <value>
            The tree this node is found in.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Triggers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;AdaptiveExpressions.TriggerTrees.Trigger&gt; Triggers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class AdaptiveExpressions.TriggerTrees.Trigger&gt; Triggers" />
      <MemberSignature Language="DocId" Value="P:AdaptiveExpressions.TriggerTrees.Node.Triggers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Triggers As IReadOnlyList(Of Trigger)" />
      <MemberSignature Language="F#" Value="member this.Triggers : System.Collections.Generic.IReadOnlyList&lt;AdaptiveExpressions.TriggerTrees.Trigger&gt;" Usage="AdaptiveExpressions.TriggerTrees.Node.Triggers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;AdaptiveExpressions.TriggerTrees.Trigger&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets all of the most specific triggers that contain the <see cref="P:AdaptiveExpressions.TriggerTrees.Node.Clause" /> in this node.
            </summary>
        <value>
            All of the most specific triggers that contain the <see cref="P:AdaptiveExpressions.TriggerTrees.Node.Clause" /> in this node.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
