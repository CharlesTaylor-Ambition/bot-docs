<Type Name="ExpressionAntlrParser+ArgsListContext" FullName="ExpressionAntlrParser+ArgsListContext">
  <TypeSignature Language="C#" Value="public class ExpressionAntlrParser.ArgsListContext : Antlr4.Runtime.ParserRuleContext" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ExpressionAntlrParser/ArgsListContext extends Antlr4.Runtime.ParserRuleContext" />
  <TypeSignature Language="DocId" Value="T:ExpressionAntlrParser.ArgsListContext" />
  <TypeSignature Language="VB.NET" Value="Public Class ExpressionAntlrParser.ArgsListContext&#xA;Inherits ParserRuleContext" />
  <TypeSignature Language="F#" Value="type ExpressionAntlrParser.ArgsListContext = class&#xA;    inherit ParserRuleContext" />
  <AssemblyInfo>
    <AssemblyName>AdaptiveExpressions</AssemblyName>
    <AssemblyVersion>4.11.0.0</AssemblyVersion>
    <AssemblyVersion>4.11.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Antlr4.Runtime.ParserRuleContext</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArgsListContext (Antlr4.Runtime.ParserRuleContext parent, int invokingState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Antlr4.Runtime.ParserRuleContext parent, int32 invokingState) cil managed" />
      <MemberSignature Language="DocId" Value="M:ExpressionAntlrParser.ArgsListContext.#ctor(Antlr4.Runtime.ParserRuleContext,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parent As ParserRuleContext, invokingState As Integer)" />
      <MemberSignature Language="F#" Value="new ExpressionAntlrParser.ArgsListContext : Antlr4.Runtime.ParserRuleContext * int -&gt; ExpressionAntlrParser.ArgsListContext" Usage="new ExpressionAntlrParser.ArgsListContext (parent, invokingState)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parent" Type="Antlr4.Runtime.ParserRuleContext" />
        <Parameter Name="invokingState" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parent">To be added.</param>
        <param name="invokingState">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public override TResult Accept&lt;TResult&gt; (Antlr4.Runtime.Tree.IParseTreeVisitor&lt;TResult&gt; visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!TResult Accept&lt;TResult&gt;(class Antlr4.Runtime.Tree.IParseTreeVisitor`1&lt;!!TResult&gt; visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:ExpressionAntlrParser.ArgsListContext.Accept``1(Antlr4.Runtime.Tree.IParseTreeVisitor{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Accept(Of TResult) (visitor As IParseTreeVisitor(Of TResult)) As TResult" />
      <MemberSignature Language="F#" Value="override this.Accept : Antlr4.Runtime.Tree.IParseTreeVisitor&lt;'Result&gt; -&gt; 'Result" Usage="argsListContext.Accept visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="visitor" Type="Antlr4.Runtime.Tree.IParseTreeVisitor&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="COMMA">
      <MemberSignature Language="C#" Value="public Antlr4.Runtime.Tree.ITerminalNode[] COMMA ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Antlr4.Runtime.Tree.ITerminalNode[] COMMA() cil managed" />
      <MemberSignature Language="DocId" Value="M:ExpressionAntlrParser.ArgsListContext.COMMA" />
      <MemberSignature Language="VB.NET" Value="Public Function COMMA () As ITerminalNode()" />
      <MemberSignature Language="F#" Value="member this.COMMA : unit -&gt; Antlr4.Runtime.Tree.ITerminalNode[]" Usage="argsListContext.COMMA " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Antlr4.Runtime.Tree.ITerminalNode[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="COMMA">
      <MemberSignature Language="C#" Value="public Antlr4.Runtime.Tree.ITerminalNode COMMA (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Antlr4.Runtime.Tree.ITerminalNode COMMA(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:ExpressionAntlrParser.ArgsListContext.COMMA(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function COMMA (i As Integer) As ITerminalNode" />
      <MemberSignature Language="F#" Value="member this.COMMA : int -&gt; Antlr4.Runtime.Tree.ITerminalNode" Usage="argsListContext.COMMA i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Antlr4.Runtime.Tree.ITerminalNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterRule">
      <MemberSignature Language="C#" Value="public override void EnterRule (Antlr4.Runtime.Tree.IParseTreeListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EnterRule(class Antlr4.Runtime.Tree.IParseTreeListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:ExpressionAntlrParser.ArgsListContext.EnterRule(Antlr4.Runtime.Tree.IParseTreeListener)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EnterRule (listener As IParseTreeListener)" />
      <MemberSignature Language="F#" Value="override this.EnterRule : Antlr4.Runtime.Tree.IParseTreeListener -&gt; unit" Usage="argsListContext.EnterRule listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Antlr4.Runtime.Tree.IParseTreeListener" />
      </Parameters>
      <Docs>
        <param name="listener">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitRule">
      <MemberSignature Language="C#" Value="public override void ExitRule (Antlr4.Runtime.Tree.IParseTreeListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ExitRule(class Antlr4.Runtime.Tree.IParseTreeListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:ExpressionAntlrParser.ArgsListContext.ExitRule(Antlr4.Runtime.Tree.IParseTreeListener)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ExitRule (listener As IParseTreeListener)" />
      <MemberSignature Language="F#" Value="override this.ExitRule : Antlr4.Runtime.Tree.IParseTreeListener -&gt; unit" Usage="argsListContext.ExitRule listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Antlr4.Runtime.Tree.IParseTreeListener" />
      </Parameters>
      <Docs>
        <param name="listener">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="expression">
      <MemberSignature Language="C#" Value="public ExpressionAntlrParser.ExpressionContext[] expression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance ExpressionAntlrParser/ExpressionContext[] expression() cil managed" />
      <MemberSignature Language="DocId" Value="M:ExpressionAntlrParser.ArgsListContext.expression" />
      <MemberSignature Language="VB.NET" Value="Public Function expression () As ExpressionAntlrParser.ExpressionContext()" />
      <MemberSignature Language="F#" Value="member this.expression : unit -&gt; ExpressionAntlrParser.ExpressionContext[]" Usage="argsListContext.expression " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ExpressionAntlrParser+ExpressionContext[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="expression">
      <MemberSignature Language="C#" Value="public ExpressionAntlrParser.ExpressionContext expression (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance ExpressionAntlrParser/ExpressionContext expression(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:ExpressionAntlrParser.ArgsListContext.expression(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function expression (i As Integer) As ExpressionAntlrParser.ExpressionContext" />
      <MemberSignature Language="F#" Value="member this.expression : int -&gt; ExpressionAntlrParser.ExpressionContext" Usage="argsListContext.expression i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ExpressionAntlrParser+ExpressionContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="lambda">
      <MemberSignature Language="C#" Value="public ExpressionAntlrParser.LambdaContext[] lambda ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance ExpressionAntlrParser/LambdaContext[] lambda() cil managed" />
      <MemberSignature Language="DocId" Value="M:ExpressionAntlrParser.ArgsListContext.lambda" />
      <MemberSignature Language="VB.NET" Value="Public Function lambda () As ExpressionAntlrParser.LambdaContext()" />
      <MemberSignature Language="F#" Value="member this.lambda : unit -&gt; ExpressionAntlrParser.LambdaContext[]" Usage="argsListContext.lambda " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ExpressionAntlrParser+LambdaContext[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="lambda">
      <MemberSignature Language="C#" Value="public ExpressionAntlrParser.LambdaContext lambda (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance ExpressionAntlrParser/LambdaContext lambda(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:ExpressionAntlrParser.ArgsListContext.lambda(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function lambda (i As Integer) As ExpressionAntlrParser.LambdaContext" />
      <MemberSignature Language="F#" Value="member this.lambda : int -&gt; ExpressionAntlrParser.LambdaContext" Usage="argsListContext.lambda i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ExpressionAntlrParser+LambdaContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RuleIndex">
      <MemberSignature Language="C#" Value="public override int RuleIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RuleIndex" />
      <MemberSignature Language="DocId" Value="P:ExpressionAntlrParser.ArgsListContext.RuleIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RuleIndex As Integer" />
      <MemberSignature Language="F#" Value="member this.RuleIndex : int" Usage="ExpressionAntlrParser.ArgsListContext.RuleIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
