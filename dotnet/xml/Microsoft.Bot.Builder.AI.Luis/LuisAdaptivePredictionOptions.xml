<Type Name="LuisAdaptivePredictionOptions" FullName="Microsoft.Bot.Builder.AI.Luis.LuisAdaptivePredictionOptions">
  <TypeSignature Language="C#" Value="public class LuisAdaptivePredictionOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LuisAdaptivePredictionOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.AI.Luis.LuisAdaptivePredictionOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class LuisAdaptivePredictionOptions" />
  <TypeSignature Language="F#" Value="type LuisAdaptivePredictionOptions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder.AI.Luis</AssemblyName>
    <AssemblyVersion>4.11.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Optional parameters for a LUIS prediction request.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LuisAdaptivePredictionOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.AI.Luis.LuisAdaptivePredictionOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.AI.Luis</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.AI.Luis.LuisAdaptivePredictionOptions" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DateTimeReference">
      <MemberSignature Language="C#" Value="public AdaptiveExpressions.Properties.StringExpression DateTimeReference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AdaptiveExpressions.Properties.StringExpression DateTimeReference" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.AI.Luis.LuisAdaptivePredictionOptions.DateTimeReference" />
      <MemberSignature Language="VB.NET" Value="Public Property DateTimeReference As StringExpression" />
      <MemberSignature Language="F#" Value="member this.DateTimeReference : AdaptiveExpressions.Properties.StringExpression with get, set" Usage="Microsoft.Bot.Builder.AI.Luis.LuisAdaptivePredictionOptions.DateTimeReference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.AI.Luis</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty("dateTimeReference")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty("dateTimeReference")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AdaptiveExpressions.Properties.StringExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets datetimeV2 offset. The format for the datetimeReference is ISO 8601.
            </summary>
        <value>
            DateTimeReference.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExternalEntities">
      <MemberSignature Language="C#" Value="public AdaptiveExpressions.Properties.ArrayExpression&lt;Microsoft.Bot.Builder.AI.LuisV3.ExternalEntity&gt; ExternalEntities { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AdaptiveExpressions.Properties.ArrayExpression`1&lt;class Microsoft.Bot.Builder.AI.LuisV3.ExternalEntity&gt; ExternalEntities" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.AI.Luis.LuisAdaptivePredictionOptions.ExternalEntities" />
      <MemberSignature Language="VB.NET" Value="Public Property ExternalEntities As ArrayExpression(Of ExternalEntity)" />
      <MemberSignature Language="F#" Value="member this.ExternalEntities : AdaptiveExpressions.Properties.ArrayExpression&lt;Microsoft.Bot.Builder.AI.LuisV3.ExternalEntity&gt; with get, set" Usage="Microsoft.Bot.Builder.AI.Luis.LuisAdaptivePredictionOptions.ExternalEntities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.AI.Luis</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty("externalEntities")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty("externalEntities")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AdaptiveExpressions.Properties.ArrayExpression&lt;Microsoft.Bot.Builder.AI.LuisV3.ExternalEntity&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets external entities recognized in the query.
            </summary>
        <value>
            External entities recognized in query.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeAllIntents">
      <MemberSignature Language="C#" Value="public AdaptiveExpressions.Properties.BoolExpression IncludeAllIntents { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AdaptiveExpressions.Properties.BoolExpression IncludeAllIntents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.AI.Luis.LuisAdaptivePredictionOptions.IncludeAllIntents" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeAllIntents As BoolExpression" />
      <MemberSignature Language="F#" Value="member this.IncludeAllIntents : AdaptiveExpressions.Properties.BoolExpression with get, set" Usage="Microsoft.Bot.Builder.AI.Luis.LuisAdaptivePredictionOptions.IncludeAllIntents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.AI.Luis</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty("includeAllIntents")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty("includeAllIntents")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AdaptiveExpressions.Properties.BoolExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether all intents come back or only the top one.
            </summary>
        <value>
            True for returning all intents.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeAPIResults">
      <MemberSignature Language="C#" Value="public AdaptiveExpressions.Properties.BoolExpression IncludeAPIResults { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AdaptiveExpressions.Properties.BoolExpression IncludeAPIResults" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.AI.Luis.LuisAdaptivePredictionOptions.IncludeAPIResults" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeAPIResults As BoolExpression" />
      <MemberSignature Language="F#" Value="member this.IncludeAPIResults : AdaptiveExpressions.Properties.BoolExpression with get, set" Usage="Microsoft.Bot.Builder.AI.Luis.LuisAdaptivePredictionOptions.IncludeAPIResults" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.AI.Luis</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty("includeAPIResults")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty("includeAPIResults")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AdaptiveExpressions.Properties.BoolExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether API results should be included.
            </summary>
        <value>True to include API results.</value>
        <remarks>This is mainly useful for testing or getting access to LUIS features not yet in the SDK.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeInstanceData">
      <MemberSignature Language="C#" Value="public AdaptiveExpressions.Properties.BoolExpression IncludeInstanceData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AdaptiveExpressions.Properties.BoolExpression IncludeInstanceData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.AI.Luis.LuisAdaptivePredictionOptions.IncludeInstanceData" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeInstanceData As BoolExpression" />
      <MemberSignature Language="F#" Value="member this.IncludeInstanceData : AdaptiveExpressions.Properties.BoolExpression with get, set" Usage="Microsoft.Bot.Builder.AI.Luis.LuisAdaptivePredictionOptions.IncludeInstanceData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.AI.Luis</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty("includeInstanceData")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty("includeInstanceData")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AdaptiveExpressions.Properties.BoolExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether or not instance data should be included in response.
            </summary>
        <value>
            A value indicating whether or not instance data should be included in response.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public AdaptiveExpressions.Properties.BoolExpression Log { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AdaptiveExpressions.Properties.BoolExpression Log" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.AI.Luis.LuisAdaptivePredictionOptions.Log" />
      <MemberSignature Language="VB.NET" Value="Public Property Log As BoolExpression" />
      <MemberSignature Language="F#" Value="member this.Log : AdaptiveExpressions.Properties.BoolExpression with get, set" Usage="Microsoft.Bot.Builder.AI.Luis.LuisAdaptivePredictionOptions.Log" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.AI.Luis</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty("log")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty("log")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AdaptiveExpressions.Properties.BoolExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether queries should be logged in LUIS.
            </summary>
        <value>
            If queries should be logged in LUIS in order to help build better models through active learning.
            </value>
        <remarks>The default is to log queries to LUIS in order to support active learning.  To default to the Luis setting set to null.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferExternalEntities">
      <MemberSignature Language="C#" Value="public AdaptiveExpressions.Properties.BoolExpression PreferExternalEntities { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AdaptiveExpressions.Properties.BoolExpression PreferExternalEntities" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.AI.Luis.LuisAdaptivePredictionOptions.PreferExternalEntities" />
      <MemberSignature Language="VB.NET" Value="Public Property PreferExternalEntities As BoolExpression" />
      <MemberSignature Language="F#" Value="member this.PreferExternalEntities : AdaptiveExpressions.Properties.BoolExpression with get, set" Usage="Microsoft.Bot.Builder.AI.Luis.LuisAdaptivePredictionOptions.PreferExternalEntities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.AI.Luis</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty("preferExternalEntities")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty("preferExternalEntities")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AdaptiveExpressions.Properties.BoolExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether external entities should override other means of recognizing entities.
            </summary>
        <value>
            Boolean for if external entities should be preferred to the results from LUIS models.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Slot">
      <MemberSignature Language="C#" Value="public AdaptiveExpressions.Properties.StringExpression Slot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AdaptiveExpressions.Properties.StringExpression Slot" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.AI.Luis.LuisAdaptivePredictionOptions.Slot" />
      <MemberSignature Language="VB.NET" Value="Public Property Slot As StringExpression" />
      <MemberSignature Language="F#" Value="member this.Slot : AdaptiveExpressions.Properties.StringExpression with get, set" Usage="Microsoft.Bot.Builder.AI.Luis.LuisAdaptivePredictionOptions.Slot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.AI.Luis</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty("slot")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty("slot")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>AdaptiveExpressions.Properties.StringExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the LUIS slot to use for the application.
            </summary>
        <value>
            The LUIS slot to use for the application.
            </value>
        <remarks>
            By default this uses the production slot.  You can find other standard slots in <see cref="T:Microsoft.Bot.Builder.AI.LuisV3.LuisSlot" />.
            If you specify a Version, then a private version of the application is used instead of a slot.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
