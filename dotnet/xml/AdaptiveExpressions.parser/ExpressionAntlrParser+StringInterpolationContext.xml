<Type Name="ExpressionAntlrParser+StringInterpolationContext" FullName="AdaptiveExpressions.parser.ExpressionAntlrParser+StringInterpolationContext">
  <TypeSignature Language="C#" Value="public class ExpressionAntlrParser.StringInterpolationContext : Antlr4.Runtime.ParserRuleContext" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ExpressionAntlrParser/StringInterpolationContext extends Antlr4.Runtime.ParserRuleContext" />
  <TypeSignature Language="DocId" Value="T:AdaptiveExpressions.parser.ExpressionAntlrParser.StringInterpolationContext" />
  <TypeSignature Language="VB.NET" Value="Public Class ExpressionAntlrParser.StringInterpolationContext&#xA;Inherits ParserRuleContext" />
  <TypeSignature Language="F#" Value="type ExpressionAntlrParser.StringInterpolationContext = class&#xA;    inherit ParserRuleContext" />
  <AssemblyInfo>
    <AssemblyName>AdaptiveExpressions</AssemblyName>
    <AssemblyVersion>4.9.3.0</AssemblyVersion>
    <AssemblyVersion>4.10.0.0</AssemblyVersion>
    <AssemblyVersion>4.10.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Antlr4.Runtime.ParserRuleContext</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringInterpolationContext (Antlr4.Runtime.ParserRuleContext parent, int invokingState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Antlr4.Runtime.ParserRuleContext parent, int32 invokingState) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.ExpressionAntlrParser.StringInterpolationContext.#ctor(Antlr4.Runtime.ParserRuleContext,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parent As ParserRuleContext, invokingState As Integer)" />
      <MemberSignature Language="F#" Value="new AdaptiveExpressions.parser.ExpressionAntlrParser.StringInterpolationContext : Antlr4.Runtime.ParserRuleContext * int -&gt; AdaptiveExpressions.parser.ExpressionAntlrParser.StringInterpolationContext" Usage="new AdaptiveExpressions.parser.ExpressionAntlrParser.StringInterpolationContext (parent, invokingState)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parent" Type="Antlr4.Runtime.ParserRuleContext" />
        <Parameter Name="invokingState" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parent">To be added.</param>
        <param name="invokingState">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public override TResult Accept&lt;TResult&gt; (Antlr4.Runtime.Tree.IParseTreeVisitor&lt;TResult&gt; visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!TResult Accept&lt;TResult&gt;(class Antlr4.Runtime.Tree.IParseTreeVisitor`1&lt;!!TResult&gt; visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.ExpressionAntlrParser.StringInterpolationContext.Accept``1(Antlr4.Runtime.Tree.IParseTreeVisitor{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Accept(Of TResult) (visitor As IParseTreeVisitor(Of TResult)) As TResult" />
      <MemberSignature Language="F#" Value="override this.Accept : Antlr4.Runtime.Tree.IParseTreeVisitor&lt;'Result&gt; -&gt; 'Result" Usage="stringInterpolationContext.Accept visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="visitor" Type="Antlr4.Runtime.Tree.IParseTreeVisitor&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterRule">
      <MemberSignature Language="C#" Value="public override void EnterRule (Antlr4.Runtime.Tree.IParseTreeListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EnterRule(class Antlr4.Runtime.Tree.IParseTreeListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.ExpressionAntlrParser.StringInterpolationContext.EnterRule(Antlr4.Runtime.Tree.IParseTreeListener)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EnterRule (listener As IParseTreeListener)" />
      <MemberSignature Language="F#" Value="override this.EnterRule : Antlr4.Runtime.Tree.IParseTreeListener -&gt; unit" Usage="stringInterpolationContext.EnterRule listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Antlr4.Runtime.Tree.IParseTreeListener" />
      </Parameters>
      <Docs>
        <param name="listener">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ESCAPE_CHARACTER">
      <MemberSignature Language="C#" Value="public Antlr4.Runtime.Tree.ITerminalNode[] ESCAPE_CHARACTER ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Antlr4.Runtime.Tree.ITerminalNode[] ESCAPE_CHARACTER() cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.ExpressionAntlrParser.StringInterpolationContext.ESCAPE_CHARACTER" />
      <MemberSignature Language="VB.NET" Value="Public Function ESCAPE_CHARACTER () As ITerminalNode()" />
      <MemberSignature Language="F#" Value="member this.ESCAPE_CHARACTER : unit -&gt; Antlr4.Runtime.Tree.ITerminalNode[]" Usage="stringInterpolationContext.ESCAPE_CHARACTER " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Antlr4.Runtime.Tree.ITerminalNode[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ESCAPE_CHARACTER">
      <MemberSignature Language="C#" Value="public Antlr4.Runtime.Tree.ITerminalNode ESCAPE_CHARACTER (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Antlr4.Runtime.Tree.ITerminalNode ESCAPE_CHARACTER(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.ExpressionAntlrParser.StringInterpolationContext.ESCAPE_CHARACTER(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ESCAPE_CHARACTER (i As Integer) As ITerminalNode" />
      <MemberSignature Language="F#" Value="member this.ESCAPE_CHARACTER : int -&gt; Antlr4.Runtime.Tree.ITerminalNode" Usage="stringInterpolationContext.ESCAPE_CHARACTER i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Antlr4.Runtime.Tree.ITerminalNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitRule">
      <MemberSignature Language="C#" Value="public override void ExitRule (Antlr4.Runtime.Tree.IParseTreeListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ExitRule(class Antlr4.Runtime.Tree.IParseTreeListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.ExpressionAntlrParser.StringInterpolationContext.ExitRule(Antlr4.Runtime.Tree.IParseTreeListener)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ExitRule (listener As IParseTreeListener)" />
      <MemberSignature Language="F#" Value="override this.ExitRule : Antlr4.Runtime.Tree.IParseTreeListener -&gt; unit" Usage="stringInterpolationContext.ExitRule listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Antlr4.Runtime.Tree.IParseTreeListener" />
      </Parameters>
      <Docs>
        <param name="listener">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RuleIndex">
      <MemberSignature Language="C#" Value="public override int RuleIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RuleIndex" />
      <MemberSignature Language="DocId" Value="P:AdaptiveExpressions.parser.ExpressionAntlrParser.StringInterpolationContext.RuleIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RuleIndex As Integer" />
      <MemberSignature Language="F#" Value="member this.RuleIndex : int" Usage="AdaptiveExpressions.parser.ExpressionAntlrParser.StringInterpolationContext.RuleIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="STRING_INTERPOLATION_START">
      <MemberSignature Language="C#" Value="public Antlr4.Runtime.Tree.ITerminalNode[] STRING_INTERPOLATION_START ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Antlr4.Runtime.Tree.ITerminalNode[] STRING_INTERPOLATION_START() cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.ExpressionAntlrParser.StringInterpolationContext.STRING_INTERPOLATION_START" />
      <MemberSignature Language="VB.NET" Value="Public Function STRING_INTERPOLATION_START () As ITerminalNode()" />
      <MemberSignature Language="F#" Value="member this.STRING_INTERPOLATION_START : unit -&gt; Antlr4.Runtime.Tree.ITerminalNode[]" Usage="stringInterpolationContext.STRING_INTERPOLATION_START " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Antlr4.Runtime.Tree.ITerminalNode[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="STRING_INTERPOLATION_START">
      <MemberSignature Language="C#" Value="public Antlr4.Runtime.Tree.ITerminalNode STRING_INTERPOLATION_START (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Antlr4.Runtime.Tree.ITerminalNode STRING_INTERPOLATION_START(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.ExpressionAntlrParser.StringInterpolationContext.STRING_INTERPOLATION_START(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function STRING_INTERPOLATION_START (i As Integer) As ITerminalNode" />
      <MemberSignature Language="F#" Value="member this.STRING_INTERPOLATION_START : int -&gt; Antlr4.Runtime.Tree.ITerminalNode" Usage="stringInterpolationContext.STRING_INTERPOLATION_START i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Antlr4.Runtime.Tree.ITerminalNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TEMPLATE">
      <MemberSignature Language="C#" Value="public Antlr4.Runtime.Tree.ITerminalNode[] TEMPLATE ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Antlr4.Runtime.Tree.ITerminalNode[] TEMPLATE() cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.ExpressionAntlrParser.StringInterpolationContext.TEMPLATE" />
      <MemberSignature Language="VB.NET" Value="Public Function TEMPLATE () As ITerminalNode()" />
      <MemberSignature Language="F#" Value="member this.TEMPLATE : unit -&gt; Antlr4.Runtime.Tree.ITerminalNode[]" Usage="stringInterpolationContext.TEMPLATE " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Antlr4.Runtime.Tree.ITerminalNode[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TEMPLATE">
      <MemberSignature Language="C#" Value="public Antlr4.Runtime.Tree.ITerminalNode TEMPLATE (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Antlr4.Runtime.Tree.ITerminalNode TEMPLATE(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.ExpressionAntlrParser.StringInterpolationContext.TEMPLATE(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TEMPLATE (i As Integer) As ITerminalNode" />
      <MemberSignature Language="F#" Value="member this.TEMPLATE : int -&gt; Antlr4.Runtime.Tree.ITerminalNode" Usage="stringInterpolationContext.TEMPLATE i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Antlr4.Runtime.Tree.ITerminalNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="textContent">
      <MemberSignature Language="C#" Value="public AdaptiveExpressions.parser.ExpressionAntlrParser.TextContentContext[] textContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class AdaptiveExpressions.parser.ExpressionAntlrParser/TextContentContext[] textContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.ExpressionAntlrParser.StringInterpolationContext.textContent" />
      <MemberSignature Language="VB.NET" Value="Public Function textContent () As ExpressionAntlrParser.TextContentContext()" />
      <MemberSignature Language="F#" Value="member this.textContent : unit -&gt; AdaptiveExpressions.parser.ExpressionAntlrParser.TextContentContext[]" Usage="stringInterpolationContext.textContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AdaptiveExpressions.parser.ExpressionAntlrParser+TextContentContext[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="textContent">
      <MemberSignature Language="C#" Value="public AdaptiveExpressions.parser.ExpressionAntlrParser.TextContentContext textContent (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class AdaptiveExpressions.parser.ExpressionAntlrParser/TextContentContext textContent(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.ExpressionAntlrParser.StringInterpolationContext.textContent(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function textContent (i As Integer) As ExpressionAntlrParser.TextContentContext" />
      <MemberSignature Language="F#" Value="member this.textContent : int -&gt; AdaptiveExpressions.parser.ExpressionAntlrParser.TextContentContext" Usage="stringInterpolationContext.textContent i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AdaptiveExpressions.parser.ExpressionAntlrParser+TextContentContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
