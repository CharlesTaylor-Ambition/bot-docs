<Type Name="ExpressionAntlrParser+BinaryOpExpContext" FullName="AdaptiveExpressions.parser.ExpressionAntlrParser+BinaryOpExpContext">
  <TypeSignature Language="C#" Value="public class ExpressionAntlrParser.BinaryOpExpContext : AdaptiveExpressions.parser.ExpressionAntlrParser.ExpressionContext" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ExpressionAntlrParser/BinaryOpExpContext extends AdaptiveExpressions.parser.ExpressionAntlrParser/ExpressionContext" />
  <TypeSignature Language="DocId" Value="T:AdaptiveExpressions.parser.ExpressionAntlrParser.BinaryOpExpContext" />
  <TypeSignature Language="VB.NET" Value="Public Class ExpressionAntlrParser.BinaryOpExpContext&#xA;Inherits ExpressionAntlrParser.ExpressionContext" />
  <TypeSignature Language="F#" Value="type ExpressionAntlrParser.BinaryOpExpContext = class&#xA;    inherit ExpressionAntlrParser.ExpressionContext" />
  <AssemblyInfo>
    <AssemblyName>AdaptiveExpressions</AssemblyName>
    <AssemblyVersion>4.9.3.0</AssemblyVersion>
    <AssemblyVersion>4.10.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>AdaptiveExpressions.parser.ExpressionAntlrParser+ExpressionContext</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryOpExpContext (AdaptiveExpressions.parser.ExpressionAntlrParser.ExpressionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class AdaptiveExpressions.parser.ExpressionAntlrParser/ExpressionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.ExpressionAntlrParser.BinaryOpExpContext.#ctor(AdaptiveExpressions.parser.ExpressionAntlrParser.ExpressionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As ExpressionAntlrParser.ExpressionContext)" />
      <MemberSignature Language="F#" Value="new AdaptiveExpressions.parser.ExpressionAntlrParser.BinaryOpExpContext : AdaptiveExpressions.parser.ExpressionAntlrParser.ExpressionContext -&gt; AdaptiveExpressions.parser.ExpressionAntlrParser.BinaryOpExpContext" Usage="new AdaptiveExpressions.parser.ExpressionAntlrParser.BinaryOpExpContext context" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+ExpressionContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public override TResult Accept&lt;TResult&gt; (Antlr4.Runtime.Tree.IParseTreeVisitor&lt;TResult&gt; visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!TResult Accept&lt;TResult&gt;(class Antlr4.Runtime.Tree.IParseTreeVisitor`1&lt;!!TResult&gt; visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.ExpressionAntlrParser.BinaryOpExpContext.Accept``1(Antlr4.Runtime.Tree.IParseTreeVisitor{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Accept(Of TResult) (visitor As IParseTreeVisitor(Of TResult)) As TResult" />
      <MemberSignature Language="F#" Value="override this.Accept : Antlr4.Runtime.Tree.IParseTreeVisitor&lt;'Result&gt; -&gt; 'Result" Usage="binaryOpExpContext.Accept visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="visitor" Type="Antlr4.Runtime.Tree.IParseTreeVisitor&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ASTERISK">
      <MemberSignature Language="C#" Value="public Antlr4.Runtime.Tree.ITerminalNode ASTERISK ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Antlr4.Runtime.Tree.ITerminalNode ASTERISK() cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.ExpressionAntlrParser.BinaryOpExpContext.ASTERISK" />
      <MemberSignature Language="VB.NET" Value="Public Function ASTERISK () As ITerminalNode" />
      <MemberSignature Language="F#" Value="member this.ASTERISK : unit -&gt; Antlr4.Runtime.Tree.ITerminalNode" Usage="binaryOpExpContext.ASTERISK " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Antlr4.Runtime.Tree.ITerminalNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DOUBLE_AND">
      <MemberSignature Language="C#" Value="public Antlr4.Runtime.Tree.ITerminalNode DOUBLE_AND ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Antlr4.Runtime.Tree.ITerminalNode DOUBLE_AND() cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.ExpressionAntlrParser.BinaryOpExpContext.DOUBLE_AND" />
      <MemberSignature Language="VB.NET" Value="Public Function DOUBLE_AND () As ITerminalNode" />
      <MemberSignature Language="F#" Value="member this.DOUBLE_AND : unit -&gt; Antlr4.Runtime.Tree.ITerminalNode" Usage="binaryOpExpContext.DOUBLE_AND " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Antlr4.Runtime.Tree.ITerminalNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DOUBLE_EQUAL">
      <MemberSignature Language="C#" Value="public Antlr4.Runtime.Tree.ITerminalNode DOUBLE_EQUAL ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Antlr4.Runtime.Tree.ITerminalNode DOUBLE_EQUAL() cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.ExpressionAntlrParser.BinaryOpExpContext.DOUBLE_EQUAL" />
      <MemberSignature Language="VB.NET" Value="Public Function DOUBLE_EQUAL () As ITerminalNode" />
      <MemberSignature Language="F#" Value="member this.DOUBLE_EQUAL : unit -&gt; Antlr4.Runtime.Tree.ITerminalNode" Usage="binaryOpExpContext.DOUBLE_EQUAL " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Antlr4.Runtime.Tree.ITerminalNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DOUBLE_VERTICAL_CYLINDER">
      <MemberSignature Language="C#" Value="public Antlr4.Runtime.Tree.ITerminalNode DOUBLE_VERTICAL_CYLINDER ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Antlr4.Runtime.Tree.ITerminalNode DOUBLE_VERTICAL_CYLINDER() cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.ExpressionAntlrParser.BinaryOpExpContext.DOUBLE_VERTICAL_CYLINDER" />
      <MemberSignature Language="VB.NET" Value="Public Function DOUBLE_VERTICAL_CYLINDER () As ITerminalNode" />
      <MemberSignature Language="F#" Value="member this.DOUBLE_VERTICAL_CYLINDER : unit -&gt; Antlr4.Runtime.Tree.ITerminalNode" Usage="binaryOpExpContext.DOUBLE_VERTICAL_CYLINDER " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Antlr4.Runtime.Tree.ITerminalNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterRule">
      <MemberSignature Language="C#" Value="public override void EnterRule (Antlr4.Runtime.Tree.IParseTreeListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EnterRule(class Antlr4.Runtime.Tree.IParseTreeListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.ExpressionAntlrParser.BinaryOpExpContext.EnterRule(Antlr4.Runtime.Tree.IParseTreeListener)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EnterRule (listener As IParseTreeListener)" />
      <MemberSignature Language="F#" Value="override this.EnterRule : Antlr4.Runtime.Tree.IParseTreeListener -&gt; unit" Usage="binaryOpExpContext.EnterRule listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Antlr4.Runtime.Tree.IParseTreeListener" />
      </Parameters>
      <Docs>
        <param name="listener">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitRule">
      <MemberSignature Language="C#" Value="public override void ExitRule (Antlr4.Runtime.Tree.IParseTreeListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ExitRule(class Antlr4.Runtime.Tree.IParseTreeListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.ExpressionAntlrParser.BinaryOpExpContext.ExitRule(Antlr4.Runtime.Tree.IParseTreeListener)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ExitRule (listener As IParseTreeListener)" />
      <MemberSignature Language="F#" Value="override this.ExitRule : Antlr4.Runtime.Tree.IParseTreeListener -&gt; unit" Usage="binaryOpExpContext.ExitRule listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Antlr4.Runtime.Tree.IParseTreeListener" />
      </Parameters>
      <Docs>
        <param name="listener">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="expression">
      <MemberSignature Language="C#" Value="public AdaptiveExpressions.parser.ExpressionAntlrParser.ExpressionContext[] expression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class AdaptiveExpressions.parser.ExpressionAntlrParser/ExpressionContext[] expression() cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.ExpressionAntlrParser.BinaryOpExpContext.expression" />
      <MemberSignature Language="VB.NET" Value="Public Function expression () As ExpressionAntlrParser.ExpressionContext()" />
      <MemberSignature Language="F#" Value="member this.expression : unit -&gt; AdaptiveExpressions.parser.ExpressionAntlrParser.ExpressionContext[]" Usage="binaryOpExpContext.expression " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AdaptiveExpressions.parser.ExpressionAntlrParser+ExpressionContext[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="expression">
      <MemberSignature Language="C#" Value="public AdaptiveExpressions.parser.ExpressionAntlrParser.ExpressionContext expression (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class AdaptiveExpressions.parser.ExpressionAntlrParser/ExpressionContext expression(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.ExpressionAntlrParser.BinaryOpExpContext.expression(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function expression (i As Integer) As ExpressionAntlrParser.ExpressionContext" />
      <MemberSignature Language="F#" Value="member this.expression : int -&gt; AdaptiveExpressions.parser.ExpressionAntlrParser.ExpressionContext" Usage="binaryOpExpContext.expression i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AdaptiveExpressions.parser.ExpressionAntlrParser+ExpressionContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LESS_OR_EQUAl">
      <MemberSignature Language="C#" Value="public Antlr4.Runtime.Tree.ITerminalNode LESS_OR_EQUAl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Antlr4.Runtime.Tree.ITerminalNode LESS_OR_EQUAl() cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.ExpressionAntlrParser.BinaryOpExpContext.LESS_OR_EQUAl" />
      <MemberSignature Language="VB.NET" Value="Public Function LESS_OR_EQUAl () As ITerminalNode" />
      <MemberSignature Language="F#" Value="member this.LESS_OR_EQUAl : unit -&gt; Antlr4.Runtime.Tree.ITerminalNode" Usage="binaryOpExpContext.LESS_OR_EQUAl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Antlr4.Runtime.Tree.ITerminalNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LESS_THAN">
      <MemberSignature Language="C#" Value="public Antlr4.Runtime.Tree.ITerminalNode LESS_THAN ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Antlr4.Runtime.Tree.ITerminalNode LESS_THAN() cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.ExpressionAntlrParser.BinaryOpExpContext.LESS_THAN" />
      <MemberSignature Language="VB.NET" Value="Public Function LESS_THAN () As ITerminalNode" />
      <MemberSignature Language="F#" Value="member this.LESS_THAN : unit -&gt; Antlr4.Runtime.Tree.ITerminalNode" Usage="binaryOpExpContext.LESS_THAN " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Antlr4.Runtime.Tree.ITerminalNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MORE_OR_EQUAL">
      <MemberSignature Language="C#" Value="public Antlr4.Runtime.Tree.ITerminalNode MORE_OR_EQUAL ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Antlr4.Runtime.Tree.ITerminalNode MORE_OR_EQUAL() cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.ExpressionAntlrParser.BinaryOpExpContext.MORE_OR_EQUAL" />
      <MemberSignature Language="VB.NET" Value="Public Function MORE_OR_EQUAL () As ITerminalNode" />
      <MemberSignature Language="F#" Value="member this.MORE_OR_EQUAL : unit -&gt; Antlr4.Runtime.Tree.ITerminalNode" Usage="binaryOpExpContext.MORE_OR_EQUAL " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Antlr4.Runtime.Tree.ITerminalNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MORE_THAN">
      <MemberSignature Language="C#" Value="public Antlr4.Runtime.Tree.ITerminalNode MORE_THAN ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Antlr4.Runtime.Tree.ITerminalNode MORE_THAN() cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.ExpressionAntlrParser.BinaryOpExpContext.MORE_THAN" />
      <MemberSignature Language="VB.NET" Value="Public Function MORE_THAN () As ITerminalNode" />
      <MemberSignature Language="F#" Value="member this.MORE_THAN : unit -&gt; Antlr4.Runtime.Tree.ITerminalNode" Usage="binaryOpExpContext.MORE_THAN " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Antlr4.Runtime.Tree.ITerminalNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NOT_EQUAL">
      <MemberSignature Language="C#" Value="public Antlr4.Runtime.Tree.ITerminalNode NOT_EQUAL ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Antlr4.Runtime.Tree.ITerminalNode NOT_EQUAL() cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.ExpressionAntlrParser.BinaryOpExpContext.NOT_EQUAL" />
      <MemberSignature Language="VB.NET" Value="Public Function NOT_EQUAL () As ITerminalNode" />
      <MemberSignature Language="F#" Value="member this.NOT_EQUAL : unit -&gt; Antlr4.Runtime.Tree.ITerminalNode" Usage="binaryOpExpContext.NOT_EQUAL " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Antlr4.Runtime.Tree.ITerminalNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PERCENT">
      <MemberSignature Language="C#" Value="public Antlr4.Runtime.Tree.ITerminalNode PERCENT ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Antlr4.Runtime.Tree.ITerminalNode PERCENT() cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.ExpressionAntlrParser.BinaryOpExpContext.PERCENT" />
      <MemberSignature Language="VB.NET" Value="Public Function PERCENT () As ITerminalNode" />
      <MemberSignature Language="F#" Value="member this.PERCENT : unit -&gt; Antlr4.Runtime.Tree.ITerminalNode" Usage="binaryOpExpContext.PERCENT " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Antlr4.Runtime.Tree.ITerminalNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PLUS">
      <MemberSignature Language="C#" Value="public Antlr4.Runtime.Tree.ITerminalNode PLUS ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Antlr4.Runtime.Tree.ITerminalNode PLUS() cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.ExpressionAntlrParser.BinaryOpExpContext.PLUS" />
      <MemberSignature Language="VB.NET" Value="Public Function PLUS () As ITerminalNode" />
      <MemberSignature Language="F#" Value="member this.PLUS : unit -&gt; Antlr4.Runtime.Tree.ITerminalNode" Usage="binaryOpExpContext.PLUS " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Antlr4.Runtime.Tree.ITerminalNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SINGLE_AND">
      <MemberSignature Language="C#" Value="public Antlr4.Runtime.Tree.ITerminalNode SINGLE_AND ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Antlr4.Runtime.Tree.ITerminalNode SINGLE_AND() cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.ExpressionAntlrParser.BinaryOpExpContext.SINGLE_AND" />
      <MemberSignature Language="VB.NET" Value="Public Function SINGLE_AND () As ITerminalNode" />
      <MemberSignature Language="F#" Value="member this.SINGLE_AND : unit -&gt; Antlr4.Runtime.Tree.ITerminalNode" Usage="binaryOpExpContext.SINGLE_AND " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Antlr4.Runtime.Tree.ITerminalNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SLASH">
      <MemberSignature Language="C#" Value="public Antlr4.Runtime.Tree.ITerminalNode SLASH ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Antlr4.Runtime.Tree.ITerminalNode SLASH() cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.ExpressionAntlrParser.BinaryOpExpContext.SLASH" />
      <MemberSignature Language="VB.NET" Value="Public Function SLASH () As ITerminalNode" />
      <MemberSignature Language="F#" Value="member this.SLASH : unit -&gt; Antlr4.Runtime.Tree.ITerminalNode" Usage="binaryOpExpContext.SLASH " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Antlr4.Runtime.Tree.ITerminalNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SUBSTRACT">
      <MemberSignature Language="C#" Value="public Antlr4.Runtime.Tree.ITerminalNode SUBSTRACT ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Antlr4.Runtime.Tree.ITerminalNode SUBSTRACT() cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.ExpressionAntlrParser.BinaryOpExpContext.SUBSTRACT" />
      <MemberSignature Language="VB.NET" Value="Public Function SUBSTRACT () As ITerminalNode" />
      <MemberSignature Language="F#" Value="member this.SUBSTRACT : unit -&gt; Antlr4.Runtime.Tree.ITerminalNode" Usage="binaryOpExpContext.SUBSTRACT " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Antlr4.Runtime.Tree.ITerminalNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XOR">
      <MemberSignature Language="C#" Value="public Antlr4.Runtime.Tree.ITerminalNode XOR ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Antlr4.Runtime.Tree.ITerminalNode XOR() cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.ExpressionAntlrParser.BinaryOpExpContext.XOR" />
      <MemberSignature Language="VB.NET" Value="Public Function XOR () As ITerminalNode" />
      <MemberSignature Language="F#" Value="member this.XOR : unit -&gt; Antlr4.Runtime.Tree.ITerminalNode" Usage="binaryOpExpContext.XOR " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Antlr4.Runtime.Tree.ITerminalNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
