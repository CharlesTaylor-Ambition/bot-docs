<Type Name="ParserErrorListener" FullName="AdaptiveExpressions.ParserErrorListener">
  <TypeSignature Language="C#" Value="public class ParserErrorListener : Antlr4.Runtime.BaseErrorListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ParserErrorListener extends Antlr4.Runtime.BaseErrorListener" />
  <TypeSignature Language="DocId" Value="T:AdaptiveExpressions.ParserErrorListener" />
  <TypeSignature Language="VB.NET" Value="Public Class ParserErrorListener&#xA;Inherits BaseErrorListener" />
  <TypeSignature Language="F#" Value="type ParserErrorListener = class&#xA;    inherit BaseErrorListener" />
  <AssemblyInfo>
    <AssemblyName>AdaptiveExpressions</AssemblyName>
    <AssemblyVersion>4.9.3.0</AssemblyVersion>
    <AssemblyVersion>4.10.0.0</AssemblyVersion>
    <AssemblyVersion>4.10.3.0</AssemblyVersion>
    <AssemblyVersion>4.11.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Antlr4.Runtime.BaseErrorListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Expression parser error listener.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParserErrorListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ParserErrorListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public static readonly AdaptiveExpressions.ParserErrorListener Instance;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class AdaptiveExpressions.ParserErrorListener Instance" />
      <MemberSignature Language="DocId" Value="F:AdaptiveExpressions.ParserErrorListener.Instance" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Instance As ParserErrorListener " />
      <MemberSignature Language="F#" Value=" staticval mutable Instance : AdaptiveExpressions.ParserErrorListener" Usage="AdaptiveExpressions.ParserErrorListener.Instance" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AdaptiveExpressions.ParserErrorListener</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A ParserErrorListener instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SyntaxError">
      <MemberSignature Language="C#" Value="public override void SyntaxError (System.IO.TextWriter output, Antlr4.Runtime.IRecognizer recognizer, Antlr4.Runtime.IToken offendingSymbol, int line, int charPositionInLine, string msg, Antlr4.Runtime.RecognitionException e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SyntaxError(class System.IO.TextWriter output, class Antlr4.Runtime.IRecognizer recognizer, class Antlr4.Runtime.IToken offendingSymbol, int32 line, int32 charPositionInLine, string msg, class Antlr4.Runtime.RecognitionException e) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ParserErrorListener.SyntaxError(System.IO.TextWriter,Antlr4.Runtime.IRecognizer,Antlr4.Runtime.IToken,System.Int32,System.Int32,System.String,Antlr4.Runtime.RecognitionException)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SyntaxError (output As TextWriter, recognizer As IRecognizer, offendingSymbol As IToken, line As Integer, charPositionInLine As Integer, msg As String, e As RecognitionException)" />
      <MemberSignature Language="F#" Value="override this.SyntaxError : System.IO.TextWriter * Antlr4.Runtime.IRecognizer * Antlr4.Runtime.IToken * int * int * string * Antlr4.Runtime.RecognitionException -&gt; unit" Usage="parserErrorListener.SyntaxError (output, recognizer, offendingSymbol, line, charPositionInLine, msg, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="recognizer" Type="Antlr4.Runtime.IRecognizer" />
        <Parameter Name="offendingSymbol" Type="Antlr4.Runtime.IToken" />
        <Parameter Name="line" Type="System.Int32" />
        <Parameter Name="charPositionInLine" Type="System.Int32" />
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="e" Type="Antlr4.Runtime.RecognitionException" />
      </Parameters>
      <Docs>
        <param name="output">Text writer.</param>
        <param name="recognizer">An Antlr4 runtime recognizer.</param>
        <param name="offendingSymbol">The token violate the lexer rules.</param>
        <param name="line">The line number where the error occurred.</param>
        <param name="charPositionInLine">The position of character in the line where the error occurred.</param>
        <param name="msg">The error message.</param>
        <param name="e">The RecognitionException.</param>
        <summary>
            Throw a syntax error based one current context.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
