<Type Name="IExpressionParser" FullName="AdaptiveExpressions.IExpressionParser">
  <TypeSignature Language="C#" Value="public interface IExpressionParser" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IExpressionParser" />
  <TypeSignature Language="DocId" Value="T:AdaptiveExpressions.IExpressionParser" />
  <TypeSignature Language="VB.NET" Value="Public Interface IExpressionParser" />
  <TypeSignature Language="F#" Value="type IExpressionParser = interface" />
  <AssemblyInfo>
    <AssemblyName>AdaptiveExpressions</AssemblyName>
    <AssemblyVersion>4.9.3.0</AssemblyVersion>
    <AssemblyVersion>4.10.0.0</AssemblyVersion>
    <AssemblyVersion>4.10.3.0</AssemblyVersion>
    <AssemblyVersion>4.11.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Interface to parse a string into an <see cref="T:AdaptiveExpressions.Expression" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public AdaptiveExpressions.Expression Parse (string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class AdaptiveExpressions.Expression Parse(string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.IExpressionParser.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Parse (expression As String) As Expression" />
      <MemberSignature Language="F#" Value="abstract member Parse : string -&gt; AdaptiveExpressions.Expression" Usage="iExpressionParser.Parse expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AdaptiveExpressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expression">Expression to parse.</param>
        <summary>
            Parse a string into an <see cref="T:AdaptiveExpressions.Expression" />.
            </summary>
        <returns>The resulting expression.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
